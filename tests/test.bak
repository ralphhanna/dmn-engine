
$Condition
not 3
$Tests
$mask
aaa N
$Tree
0->Root              #0                                     
1-->Binary           #1   not                               
2--->Literal         #2   3                                 

$Condition
3+5
$Tests
5,false
8,true
10,false
$mask
N#N
$Tree
0->Root              #0                                     result=<8>   
1-->Operator         #2   +                                 result=<8>   
2--->Literal         #1   3                                 
2--->Literal         #3   5                                 

$Condition
>20
$Tests
5,false
25,true
$mask
#NN
$Tree
0->Root              #0                                     result=<true>   
1-->Operator         #1   >                                 result=<true>   
2--->Literal         #2   20                                
$Condition

>30 and < 50
$Tests
40,true
10,false
$mask
#NN aaa # NN
$Tree
0->Root              #0                                     
1-->Binary           #3   and                               
2--->Operator        #1   >                                 
3---->Literal        #2   30                                
2--->Operator        #4   <                                 result=<true>   
3---->Literal        #5   50                                

$Condition
> 200 or < 500
$Tests
20, true
$mask
# NNN aa # NNN
$Tree
0->Root              #0                                     result=<true>   
1-->Binary           #3   or                                result=<true>   
2--->Operator        #1   >                                 
3---->Literal        #2   200                               
2--->Operator        #4   <                                 result=<true>   
3---->Literal        #5   500                               

$Condition
50
$Tests
55, false
$mask
NN
$Tree
0->Root              #0                                     
1-->Literal          #1   50                                
$Condition
20+35
$Tests
55, true
$mask
NN#NN
$Tree
0->Root              #0                                     result=<true>   
1-->Operator         #2   +                                 result=<55>   
2--->Literal         #1   20                                
2--->Literal         #3   35                                

$Condition
> 200 or < 500
$Tests
20, true
$mask
# NNN aa # NNN
$Tree
0->Root              #0                                     result=<true>   
1-->Binary           #3   or                                result=<true>   
2--->Operator        #1   >                                 
3---->Literal        #2   200                               
2--->Operator        #4   <                                 result=<true>   
3---->Literal        #5   500                               

$Condition
> 200 or < 500
$Tests
20, true
$mask
# NNN aa # NNN
$Tree
0->Root              #0                                     result=<true>   
1-->Binary           #3   or                                result=<true>   
2--->Operator        #1   >                                 
3---->Literal        #2   200                               
2--->Operator        #4   <                                 result=<true>   
3---->Literal        #5   500                               

$Condition
(> 200) or (< 500)
$Tests
20, true
$mask
## NNN# aa ## NNN#
$Tree
0->Root              #0                                     result=<true>   
1-->Binary           #5   or                                result=<true>   
2--->Bracket         #1   (                                 
3---->Operator       #2   >                                 
4----->Literal       #3   200                               
2--->Bracket         #6   (                                 result=<true>   
3---->Operator       #7   <                                 result=<true>   
4----->Literal       #8   500                               


$Condition
(2+3)
$Tests
5, true    
$mask
#N#N#
$Tree
0->Root              #0                                     result=<true>   
1-->Bracket          #1   (                                 result=<5>   
2--->Operator        #3   +                                 result=<5>   
3---->Literal        #2   2                                 
3---->Literal        #4   3                                 


$Condition
2+3
$Tests
5, true    
$mask
N#N
$Tree
0->Root              #0                                     result=<true>   
1-->Operator         #2   +                                 result=<5>   
2--->Literal         #1   2                                 
2--->Literal         #3   3                                 


$Condition
2*4
$Tests
8, true    

$mask
N#N
$Tree
0->Root              #0                                     result=<true>   
1-->Operator         #2   *                                 result=<8>   
2--->Literal         #1   2                                 
2--->Literal         #3   4                                 


$Condition
(2+3)*4
$Tests
20, true    

$mask
#N#N##N
$Tree
0->Root              #0                                     result=<true>   
1-->Operator         #6   *                                 result=<20>   
2--->Bracket         #1   (                                 result=<5>   
3---->Operator       #3   +                                 result=<5>   
4----->Literal       #2   2                                 
4----->Literal       #4   3                                 
2--->Literal         #7   4                                 

$Condition
75.25
$Tests
75, false
75.25, true    
$mask
NNNNN
$Tree
0->Root              #0                                     result=<true>   
1-->Literal          #1   75.25                             result=<true>   


$Condition
2,075.25
$Tests
75, false
$mask
N#NNNNNN
$Tree
0->Root              #0                                     
1-->Literal          #1   2075.25                           


$Condition
2,075.25
$Tests
2075.25, true
$mask
N#NNNNNN
$Tree
0->Root              #0                                     result=<true>   
1-->Literal          #1   2075.25                           result=<true>   
$Condition

$Tests
'-20', true

$mask

$Tree
$Errors

$Condition
>=75
$Tests
'75', true
$mask
##NN
$Tree
0->Root              #0                                     result=<true>   
1-->Operator         #1   >=                                result=<true>   
2--->Literal         #2   75                                
$Condition
<=55
$Tests
'55', true
$mask
##NN
$Tree
0->Root              #0                                     result=<true>   
1-->Operator         #1   <=                                result=<true>   
2--->Literal         #2   55                                


$Condition
==55
$Tests
'55', true

$mask
##NN
$Tree
0->Root              #0                                     result=<true>   
1-->Operator         #1   ==                                result=<true>   
2--->Literal         #2   55                                


$Condition
2 + 3
$Tests
'5', true

$mask
N # N
$Tree
0->Root              #0                                     result=<true>   
1-->Operator         #2   +                                 result=<5>   
2--->Literal         #1   2                                 
2--->Literal         #3   3                                 


$Condition
> 200 or < 500
$Tests
20, true

$mask
# NNN aa # NNN
$Tree
0->Root              #0                                     result=<true>   
1-->Binary           #3   or                                result=<true>   
2--->Operator        #1   >                                 
3---->Literal        #2   200                               
2--->Operator        #4   <                                 result=<true>   
3---->Literal        #5   500                               


$Condition
object.fun('test')
$Tests
'75', true
$mask
aaaaaaaaaa##aaaa##
$Tree
0->Root              #0                                     result=<true>   
1-->Call             #1   object.fun                        result=<true>   
2--->Bracket         #2   (                                 
3---->Literal        #3   test                              
$Condition
5 + object.fun('test')
$Tests
'75', true

$mask
N # aaaaaaaaaa##aaaa##
$Tree
0->Root              #0                                     
1-->Operator         #2   +                                 result=<6>   
2--->Literal         #1   5                                 
2--->Call            #3   object.fun                        result=<true>   
3---->Bracket        #4   (                                 
4----->Literal       #5   test                              
$Errors
***Error -5 + object.fun('test') for 75 result: false expecting:<true>


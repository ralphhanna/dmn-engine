[
  {
    "tree": [
      "0->Root              #0                                     result=<600>   ",
      "1-->Operator         #8   *                                 result=<600>   ",
      "2--->Bracket         #1   (                                 result=<6>   ",
      "3---->Operator       #3   +                                 result=<6>   ",
      "4----->Number        #2   4                                 result=<4>   ",
      "4----->Operator      #5   -                                 result=<2>   ",
      "5------>Number       #4   3                                 result=<3>   ",
      "5------>Number       #6   1                                 result=<1>   ",
      "2--->Operator        #10  ^                                 result=<100>   ",
      "3---->Number         #9   10                                result=<10>   ",
      "3---->Number         #11  2                                 result=<2>   "
    ],
    "newTree": [],
    "tests": [
      "600"
    ],
    "errors": [],
    "type": "Expression",
    "comments": [
      ""
    ],
    "expr": "(4 + 3 - 1) * 10 ^2",
    "mask": "#N # N # N# # NN #N",
    "newMask": "#N # N # N# # NN #N",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     ",
      "1-->Operator         #2   +                                 ",
      "2--->Number          #1   4                                 ",
      "2--->Operator        #4   -                                 ",
      "3---->Number         #3   3                                 ",
      "3---->Operator       #6   *                                 ",
      "4----->Number        #5   1                                 ",
      "4----->Operator      #8   ^                                 ",
      "5------>Number       #7   10                                ",
      "5------>Number       #9   2                                 "
    ],
    "newTree": [],
    "tests": [],
    "errors": [],
    "type": "Expression",
    "comments": [
      ""
    ],
    "expr": "4 + 3 - 1 * 10 ^2",
    "mask": "N # N # N # NN #N",
    "newMask": "N # N # N # NN #N",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     ",
      "1-->Operator         #1   between                           ",
      "2--->Text            #5   $$VALUE                           result=<800>   ",
      "2--->Binary          #3   and                               result=<700>   ",
      "3---->Number         #2   500                               result=<500>   ",
      "3---->Number         #4   700                               result=<700>   "
    ],
    "newTree": [],
    "tests": [
      "600,true",
      "800,false"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "between 500 and 700",
    "mask": "aaaaaaa NNN aaa NNN",
    "newMask": "aaaaaaa NNN aaa NNN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     ",
      "1-->Binary           #1   not                               ",
      "2--->Literal         #2   3                                 "
    ],
    "newTree": [
      "0->Root              #0                                     ",
      "1-->Binary           #1   not                               ",
      "2--->Text            #3   $$VALUE                           ",
      "2--->Number          #2   3                                 "
    ],
    "tests": [],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "not 3",
    "mask": "aaa N",
    "newMask": "aaa N",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     ",
      "1-->Operator         #2   +                                 result=<8>   ",
      "2--->Literal         #1   3                                 ",
      "2--->Literal         #3   5                                 "
    ],
    "newTree": [
      "0->Root              #0                                     result=<8>   ",
      "1-->Operator         #2   +                                 result=<8>   ",
      "2--->Number          #1   3                                 result=<3>   ",
      "2--->Number          #3   5                                 result=<5>   "
    ],
    "tests": [
      "5,false",
      "8,true",
      "10,false"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "3+5",
    "mask": "N#N",
    "newMask": "N#N",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   >                                 result=<true>   ",
      "2--->Literal         #2   20                                "
    ],
    "newTree": [
      "0->Root              #0                                     ",
      "1-->Operator         #1   >                                 ",
      "2--->Text            #3   $$VALUE                           result=<5>   ",
      "2--->Number          #2   20                                result=<20>   "
    ],
    "tests": [
      "25,true",
      "5,false"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": ">20",
    "mask": "#NN",
    "newMask": "#NN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     ",
      "1-->Binary           #3   and                               ",
      "2--->Operator        #1   >                                 ",
      "3---->Literal        #2   30                                ",
      "2--->Operator        #4   <                                 result=<true>   ",
      "3---->Literal        #5   50                                "
    ],
    "newTree": [
      "0->Root              #0                                     ",
      "1-->Binary           #3   and                               ",
      "2--->Operator        #1   >                                 ",
      "3---->Text           #7   $$VALUE                           result=<10>   ",
      "3---->Number         #2   30                                result=<30>   ",
      "2--->Operator        #4   <                                 result=<true>   ",
      "3---->Text           #6   $$VALUE                           result=<10>   ",
      "3---->Number         #5   50                                result=<50>   "
    ],
    "tests": [
      "40,true",
      "10,false"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": ">30 and < 50",
    "mask": "#NN aaa # NN",
    "newMask": "#NN aaa # NN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Binary           #3   or                                result=<true>   ",
      "2--->Operator        #1   >                                 ",
      "3---->Literal        #2   200                               ",
      "2--->Operator        #4   <                                 result=<true>   ",
      "3---->Literal        #5   500                               "
    ],
    "newTree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Binary           #3   or                                result=<true>   ",
      "2--->Operator        #1   >                                 ",
      "3---->Text           #7   $$VALUE                           result=<20>   ",
      "3---->Number         #2   200                               result=<200>   ",
      "2--->Operator        #4   <                                 result=<true>   ",
      "3---->Text           #6   $$VALUE                           result=<20>   ",
      "3---->Number         #5   500                               result=<500>   "
    ],
    "tests": [
      "20, true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "> 200 or < 500",
    "mask": "# NNN aa # NNN",
    "newMask": "# NNN aa # NNN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     ",
      "1-->Literal          #1   50                                "
    ],
    "newTree": [
      "0->Root              #0                                     result=<50>   ",
      "1-->Number           #1   50                                result=<50>   "
    ],
    "tests": [
      "55, false"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "50",
    "mask": "NN",
    "newMask": "NN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #2   +                                 result=<55>   ",
      "2--->Literal         #1   20                                ",
      "2--->Literal         #3   35                                "
    ],
    "newTree": [
      "0->Root              #0                                     result=<55>   ",
      "1-->Operator         #2   +                                 result=<55>   ",
      "2--->Number          #1   20                                result=<20>   ",
      "2--->Number          #3   35                                result=<35>   "
    ],
    "tests": [
      "55, true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "20+35",
    "mask": "NN#NN ",
    "newMask": "NN#NN",
    "maskDiff": "     "
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Binary           #3   or                                result=<true>   ",
      "2--->Operator        #1   >                                 ",
      "3---->Literal        #2   200                               ",
      "2--->Operator        #4   <                                 result=<true>   ",
      "3---->Literal        #5   500                               "
    ],
    "newTree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Binary           #3   or                                result=<true>   ",
      "2--->Operator        #1   >                                 ",
      "3---->Text           #7   $$VALUE                           result=<20>   ",
      "3---->Number         #2   200                               result=<200>   ",
      "2--->Operator        #4   <                                 result=<true>   ",
      "3---->Text           #6   $$VALUE                           result=<20>   ",
      "3---->Number         #5   500                               result=<500>   "
    ],
    "tests": [
      "20, true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "> 200 or < 500",
    "mask": "# NNN aa # NNN",
    "newMask": "# NNN aa # NNN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Binary           #3   or                                result=<true>   ",
      "2--->Operator        #1   >                                 ",
      "3---->Literal        #2   200                               ",
      "2--->Operator        #4   <                                 result=<true>   ",
      "3---->Literal        #5   500                               "
    ],
    "newTree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Binary           #3   or                                result=<true>   ",
      "2--->Operator        #1   >                                 ",
      "3---->Text           #7   $$VALUE                           result=<20>   ",
      "3---->Number         #2   200                               result=<200>   ",
      "2--->Operator        #4   <                                 result=<true>   ",
      "3---->Text           #6   $$VALUE                           result=<20>   ",
      "3---->Number         #5   500                               result=<500>   "
    ],
    "tests": [
      "20, true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "> 200 or < 500",
    "mask": "# NNN aa # NNN",
    "newMask": "# NNN aa # NNN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Binary           #5   or                                result=<true>   ",
      "2--->Bracket         #1   (                                 ",
      "3---->Operator       #2   >                                 ",
      "4----->Literal       #3   200                               ",
      "2--->Bracket         #6   (                                 result=<true>   ",
      "3---->Operator       #7   <                                 result=<true>   ",
      "4----->Literal       #8   500                               "
    ],
    "newTree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Binary           #5   or                                result=<true>   ",
      "2--->Bracket         #1   (                                 ",
      "3---->Operator       #2   >                                 ",
      "4----->Text          #11  $$VALUE                           result=<20>   ",
      "4----->Number        #3   200                               result=<200>   ",
      "2--->Bracket         #6   (                                 result=<true>   ",
      "3---->Operator       #7   <                                 result=<true>   ",
      "4----->Text          #10  $$VALUE                           result=<20>   ",
      "4----->Number        #8   500                               result=<500>   "
    ],
    "tests": [
      "20, true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "(> 200) or (< 500)",
    "mask": "## NNN# aa ## NNN#",
    "newMask": "## NNN# aa ## NNN#",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Bracket          #1   (                                 result=<5>   ",
      "2--->Operator        #3   +                                 result=<5>   ",
      "3---->Literal        #2   2                                 ",
      "3---->Literal        #4   3                                 "
    ],
    "newTree": [
      "0->Root              #0                                     result=<5>   ",
      "1-->Bracket          #1   (                                 result=<5>   ",
      "2--->Operator        #3   +                                 result=<5>   ",
      "3---->Number         #2   2                                 result=<2>   ",
      "3---->Number         #4   3                                 result=<3>   "
    ],
    "tests": [
      "5, true    "
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "(2+3)",
    "mask": "#N#N#",
    "newMask": "#N#N#",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #2   +                                 result=<5>   ",
      "2--->Literal         #1   2                                 ",
      "2--->Literal         #3   3                                 "
    ],
    "newTree": [
      "0->Root              #0                                     result=<5>   ",
      "1-->Operator         #2   +                                 result=<5>   ",
      "2--->Number          #1   2                                 result=<2>   ",
      "2--->Number          #3   3                                 result=<3>   "
    ],
    "tests": [
      "5, true    "
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "2+3",
    "mask": "N#N",
    "newMask": "N#N",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #2   *                                 result=<8>   ",
      "2--->Literal         #1   2                                 ",
      "2--->Literal         #3   4                                 "
    ],
    "newTree": [
      "0->Root              #0                                     result=<8>   ",
      "1-->Operator         #2   *                                 result=<8>   ",
      "2--->Number          #1   2                                 result=<2>   ",
      "2--->Number          #3   4                                 result=<4>   "
    ],
    "tests": [
      "8, true    "
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "2*4",
    "mask": "N#N",
    "newMask": "N#N",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #6   *                                 result=<20>   ",
      "2--->Bracket         #1   (                                 result=<5>   ",
      "3---->Operator       #3   +                                 result=<5>   ",
      "4----->Literal       #2   2                                 ",
      "4----->Literal       #4   3                                 ",
      "2--->Literal         #7   4                                 "
    ],
    "newTree": [
      "0->Root              #0                                     result=<20>   ",
      "1-->Operator         #6   *                                 result=<20>   ",
      "2--->Bracket         #1   (                                 result=<5>   ",
      "3---->Operator       #3   +                                 result=<5>   ",
      "4----->Number        #2   2                                 result=<2>   ",
      "4----->Number        #4   3                                 result=<3>   ",
      "2--->Number          #7   4                                 result=<4>   "
    ],
    "tests": [
      "20, true    "
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      "",
      ""
    ],
    "expr": "(2+3)*4",
    "mask": "#N#N##N",
    "newMask": "#N#N##N",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Literal          #1   75.25                             result=<true>   "
    ],
    "newTree": [
      "0->Root              #0                                     result=<75.25>   ",
      "1-->Number           #1   75.25                             result=<75.25>   "
    ],
    "tests": [
      "75, false",
      "75.25, true    "
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      "",
      ""
    ],
    "expr": "75.25",
    "mask": "NNNNN",
    "newMask": "NNNNN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     ",
      "1-->Literal          #1   2075.25                           "
    ],
    "newTree": [
      "0->Root              #0                                     result=<2075.25>   ",
      "1-->Number           #1   2075.25                           result=<2075.25>   "
    ],
    "tests": [
      "75, false"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "2,075.25",
    "mask": "N#NNNNNN",
    "newMask": "N#NNNNNN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Literal          #1   2075.25                           result=<true>   "
    ],
    "newTree": [
      "0->Root              #0                                     result=<2075.25>   ",
      "1-->Number           #1   2075.25                           result=<2075.25>   "
    ],
    "tests": [
      "2075.25, true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "2,075.25",
    "mask": "N#NNNNNN",
    "newMask": "N#NNNNNN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->True              #0                                     result=<true>   "
    ],
    "newTree": [],
    "tests": [
      "'-20', true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "-",
    "mask": "#",
    "newMask": "#",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   >=                                result=<true>   ",
      "2--->Literal         #2   75                                "
    ],
    "newTree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   >=                                result=<true>   ",
      "2--->Text            #3   $$VALUE                           result=<75>   ",
      "2--->Number          #2   75                                result=<75>   "
    ],
    "tests": [
      "'75', true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      "",
      ""
    ],
    "expr": ">=75",
    "mask": "##NN",
    "newMask": "##NN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   <=                                result=<true>   ",
      "2--->Literal         #2   55                                "
    ],
    "newTree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   <=                                result=<true>   ",
      "2--->Text            #3   $$VALUE                           result=<55>   ",
      "2--->Number          #2   55                                result=<55>   "
    ],
    "tests": [
      "'55', true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "<=55",
    "mask": "##NN",
    "newMask": "##NN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   ==                                result=<true>   ",
      "2--->Literal         #2   55                                "
    ],
    "newTree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   ==                                result=<true>   ",
      "2--->Text            #3   $$VALUE                           result=<55>   ",
      "2--->Number          #2   55                                result=<55>   "
    ],
    "tests": [
      "'55', true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "==55",
    "mask": "##NN",
    "newMask": "##NN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #2   +                                 result=<5>   ",
      "2--->Literal         #1   2                                 ",
      "2--->Literal         #3   3                                 "
    ],
    "newTree": [
      "0->Root              #0                                     result=<5>   ",
      "1-->Operator         #2   +                                 result=<5>   ",
      "2--->Number          #1   2                                 result=<2>   ",
      "2--->Number          #3   3                                 result=<3>   "
    ],
    "tests": [
      "'5', true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      "",
      ""
    ],
    "expr": "2 + 3",
    "mask": "N # N",
    "newMask": "N # N",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Binary           #3   or                                result=<true>   ",
      "2--->Operator        #1   >                                 ",
      "3---->Literal        #2   200                               ",
      "2--->Operator        #4   <                                 result=<true>   ",
      "3---->Literal        #5   500                               "
    ],
    "newTree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Binary           #3   or                                result=<true>   ",
      "2--->Operator        #1   >                                 ",
      "3---->Text           #7   $$VALUE                           result=<20>   ",
      "3---->Number         #2   200                               result=<200>   ",
      "2--->Operator        #4   <                                 result=<true>   ",
      "3---->Text           #6   $$VALUE                           result=<20>   ",
      "3---->Number         #5   500                               result=<500>   "
    ],
    "tests": [
      "20, true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      "",
      ""
    ],
    "expr": "> 200 or < 500",
    "mask": "# NNN aa # NNN",
    "newMask": "# NNN aa # NNN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Call             #1   object.fun                        result=<true>   ",
      "2--->Bracket         #2   (                                 ",
      "3---->Literal        #3   test                              "
    ],
    "newTree": [],
    "tests": [
      "'75', true"
    ],
    "errors": [
      "Cannot read property 'fun' of undefined"
    ],
    "type": "Condition",
    "comments": [
      "",
      "",
      "",
      ""
    ],
    "expr": "object.fun('test')",
    "mask": "aaaaaaaaaa##aaaa##",
    "newMask": "aaaaaaaaaa##aaaa##",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     ",
      "1-->Operator         #2   +                                 result=<6>   ",
      "2--->Literal         #1   5                                 ",
      "2--->Call            #3   object.fun                        result=<true>   ",
      "3---->Bracket        #4   (                                 ",
      "4----->Literal       #5   test                              "
    ],
    "newTree": [],
    "tests": [
      "'75', true"
    ],
    "errors": [
      "Cannot read property 'fun' of undefined"
    ],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "5 + object.fun('test')",
    "mask": "N # aaaaaaaaaa##aaaa##",
    "newMask": "N # aaaaaaaaaa##aaaa##",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Literal          #1   75.25                             result=<true>   "
    ],
    "newTree": [
      "0->Root              #0                                     result=<75.25>   ",
      "1-->Number           #1   75.25                             result=<75.25>   "
    ],
    "tests": [
      "75, false",
      "75.25, true    "
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      "",
      ""
    ],
    "expr": "75.25",
    "mask": "NNNNN",
    "newMask": "NNNNN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     ",
      "1-->Literal          #1   2075.25                           "
    ],
    "newTree": [
      "0->Root              #0                                     result=<2075.25>   ",
      "1-->Number           #1   2075.25                           result=<2075.25>   "
    ],
    "tests": [
      "75, false"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "2,075.25",
    "mask": "N#NNNNNN",
    "newMask": "N#NNNNNN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Literal          #1   2075.25                           result=<true>   "
    ],
    "newTree": [
      "0->Root              #0                                     result=<2075.25>   ",
      "1-->Number           #1   2075.25                           result=<2075.25>   "
    ],
    "tests": [
      "2075.25, true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "2,075.25",
    "mask": "N#NNNNNN",
    "newMask": "N#NNNNNN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   >=                                result=<true>   ",
      "2--->Literal         #2   75                                "
    ],
    "newTree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   >=                                result=<true>   ",
      "2--->Text            #3   $$VALUE                           result=<75>   ",
      "2--->Number          #2   75                                result=<75>   "
    ],
    "tests": [
      "'75', true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": ">=75",
    "mask": "##NN",
    "newMask": "##NN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   <=                                result=<true>   ",
      "2--->Literal         #2   55                                "
    ],
    "newTree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   <=                                result=<true>   ",
      "2--->Text            #3   $$VALUE                           result=<55>   ",
      "2--->Number          #2   55                                result=<55>   "
    ],
    "tests": [
      "'55', true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "<=55",
    "mask": "##NN",
    "newMask": "##NN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   ==                                result=<true>   ",
      "2--->Literal         #2   55                                "
    ],
    "newTree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #1   ==                                result=<true>   ",
      "2--->Text            #3   $$VALUE                           result=<55>   ",
      "2--->Number          #2   55                                result=<55>   "
    ],
    "tests": [
      "'55', true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      ""
    ],
    "expr": "==55",
    "mask": "##NN",
    "newMask": "##NN",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Operator         #2   +                                 result=<5>   ",
      "2--->Literal         #1   2                                 ",
      "2--->Literal         #3   3                                 "
    ],
    "newTree": [
      "0->Root              #0                                     result=<5>   ",
      "1-->Operator         #2   +                                 result=<5>   ",
      "2--->Number          #1   2                                 result=<2>   ",
      "2--->Number          #3   3                                 result=<3>   "
    ],
    "tests": [
      "'5', true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      "",
      ""
    ],
    "expr": "2 + 3",
    "mask": "N # N",
    "newMask": "N # N",
    "maskDiff": ""
  },
  {
    "tree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Call             #1   between                           result=<true>   ",
      "2--->Bracket         #2   (                                 ",
      "3---->Literal        #3   95                                ",
      "3---->Operator       #4   ,                                 ",
      "3---->Literal        #5   2500.0                            "
    ],
    "newTree": [
      "0->Root              #0                                     result=<true>   ",
      "1-->Call             #1   between                           result=<true>   ",
      "2--->Bracket         #2   (                                 ",
      "3---->Number         #3   95                                result=<95>   ",
      "3---->Operator       #4   ,                                 ",
      "3---->Number         #5   2500.0                            result=<2500>   "
    ],
    "tests": [
      "200, true"
    ],
    "errors": [],
    "type": "Condition",
    "comments": [
      "",
      "",
      "",
      "",
      ""
    ],
    "expr": "between ( 95 , 2500.0 )",
    "mask": "aaaaaaa # NN # NNNNNN #",
    "newMask": "aaaaaaa # NN # NNNNNN #",
    "maskDiff": ""
  }
]